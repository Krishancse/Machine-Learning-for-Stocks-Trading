# Ensure necessary imports
from sklearn.neural_network import MLPClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report

# Fitting - Indicators and our Labeling
X = df[df.columns[6:-1]].values 
y = df['LABEL'].values

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42) 

# Initialize and fit the MLPClassifier
mlp = MLPClassifier(hidden_layer_sizes=(8, 8, 8), activation='relu', solver='adam', max_iter=1000, random_state=42) 
mlp.fit(X_train, y_train) 

# Predictions
predict_train = mlp.predict(X_train) 
predict_test = mlp.predict(X_test)

# Print classification reports for train and test data
print('Train Data Accuracy:')
print(classification_report(y_train, predict_train)) 

print('Testing Data Accuracy:')
print(classification_report(y_test, predict_test))
